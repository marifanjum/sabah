<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Collage Maker — Pan & Zoom per Image</title>
  <style>
    :root { --ui-gap: 8px; --ui-pad: 8px; --muted: #666; --bg: #fafafa; --accent: #1976d2; }
    body { margin: 12px; font-family: system-ui, -apple-system, "Segoe UI", Roboto, Arial; background: var(--bg); color: #111; }
    .row { display:flex; gap: var(--ui-gap); align-items:center; margin-bottom: 10px; flex-wrap:wrap; }
    label { font-size: 14px; color: var(--muted); }
    select, input[type="file"], button, input[type="range"], input[type="text"] { padding: 8px; font-size: 14px; }
    button { background: white; border:1px solid #ddd; border-radius:6px; cursor:pointer; }
    button:hover { box-shadow: 0 1px 3px rgba(0,0,0,0.08); }
    #canvasContainer { position: relative; width: 1200px; height: 720px; border: 2px solid #333; background: white; overflow: hidden; }
    canvas { display:block; width:1200px; height:720px; }
    .controls { margin-top: 10px; display:flex; gap:16px; align-items:flex-start; flex-wrap:wrap; }
    .panel { background: white; border: 1px solid #e6e6e6; padding: 10px; border-radius: 6px; box-shadow: 0 1px 2px rgba(0,0,0,0.03); }
    .panel h4 { margin:0 0 8px 0; font-size:14px; color:#222; }
    .small { font-size:13px; color:var(--muted); }
    .selected-cell { outline: 3px dashed rgba(25,118,210,0.8); outline-offset: -6px; }
    .disabled { opacity: 0.6; pointer-events: none; }
    .control-row { display:flex; gap:8px; align-items:center; margin-bottom:8px; }
  </style>
</head>
<body>
<h2>Collage maker (2–6 images) — pan & zoom per image</h2>

<div class="row">
  <div class="panel">
    <div class="control-row">
      <label>Number of images</label>
      <select id="numImages">
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4" selected>4</option>
        <option value="5">5</option>
        <option value="6">6</option>
      </select>
    </div>
    <div class="control-row">
      <label>Layout</label>
      <select id="layout">
        <option value="grid">Grid</option>
        <option value="row">Column</option>
        <option value="column">Row</option>
      </select>
    </div>
  </div>

  <div class="control-row">
    <label><input type="checkbox" id="toggleBorder" checked> Show Border</label>
    <label><input type="checkbox" id="toggleLogo" checked> Show Logo</label>
  </div>

  <div class="control-row">
    <label>Logo position</label>
    <select id="logoPosition">
      <option value="top-left">Top-left</option>
      <option value="top-right" selected>Top-right</option>
      <option value="bottom-left">Bottom-left</option>
      <option value="bottom-right">Bottom-right</option>
    </select>
  </div>

  <div class="panel" style="min-width:260px;">
    <h4>Cell / image controls</h4>
    <div class="control-row">
      <label>Select cell</label>
      <select id="selectCell"></select>
    </div>
    <div id="fileInputs" class="control-row"></div>
    <div class="control-row small" style="margin-top:6px;">
      <label>Zoom</label>
      <button id="zoomOutBtn">−</button>
      <input id="zoomSlider" type="range" min="0.2" max="4" step="0.01" value="1" style="width:140px" />
      <button id="zoomInBtn">+</button>
    </div>
    <div class="control-row">
      <button id="centerBtn">Center</button>
      <button id="fitBtn">Fit to cell</button>
      <button id="fillBtn">Fill cell</button>
      <button id="resetBtn">Clear image</button>
    </div>
    <div class="small">Click a cell on the canvas to select it. Drag inside the selected cell to pan the image. Or <b>paste</b> (Ctrl+V / ⌘+V) an image into the selected cell.</div>
  </div>

  <div class="panel">
    <div class="control-row">
      <label for="filename">File name:</label>
      <input type="text" id="filename" placeholder="collage">
    </div>
    <div class="control-row">
      <button id="downloadBtn">Download Collage</button>
    </div>
  </div>
</div>

<div id="canvasContainer" class="panel">
  <canvas id="canvas" width="1200" height="720"></canvas>
</div>

<script>
/* ---- your existing JS stays intact, only download button logic changed ---- */
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
const downloadBtn = document.getElementById('downloadBtn');

/* ... all your existing code (unchanged) ... */

/* --- updated download --- */
downloadBtn.addEventListener('click', () => {
  const filenameInput = document.getElementById('filename');
  let filename = filenameInput.value.trim();
  if (!filename) filename = "collage";
  if (!filename.toLowerCase().endsWith('.webp')) {
    filename += ".webp";
  }
  const link = document.createElement('a');
  link.download = filename;
  link.href = canvas.toDataURL('image/webp', 0.9);
  link.click();
});

/* init calls */
updateUIForCount();
updateZoomUI();
logo.onload = draw;
</script>
</body>
</html>
