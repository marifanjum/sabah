<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Social Card Generator</title>
  <!-- Tailwind for layout -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Urdu font -->
  <link href="https://cdn.jsdelivr.net/npm/jameel-noori@1.1.2/jameel-noori.min.css" rel="stylesheet">
  <!-- html2canvas -->
  <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
</head>
<body class="bg-gray-100 p-6 font-sans">
  <div class="flex flex-col md:flex-row gap-6">
    
    <!-- Controls -->
    <div class="w-full md:w-1/3 space-y-4">
      <div>
        <label class="block font-bold">Headline:</label>
        <input id="headlineInput" type="text" class="w-full border rounded p-1">
      </div>
      <div>
        <label class="block font-bold">Subheading:</label>
        <input id="subheadingInput" type="text" class="w-full border rounded p-1">
      </div>
      <div>
        <label class="block font-bold">Headline Size:</label>
        <input id="headlineSize" type="range" min="30" max="120" value="80" class="w-full">
      </div>
      <div>
        <label class="block font-bold">Subheading Size:</label>
        <input id="subheadingSize" type="range" min="20" max="100" value="50" class="w-full">
      </div>
      <div>
        <label class="block font-bold">Headline Color:</label>
        <input id="headlineColor" type="color" value="#fff403">
      </div>
      <div>
        <label class="block font-bold">Subheading Color:</label>
        <input id="subheadingColor" type="color" value="#fff403">
      </div>
      <div>
        <label class="block font-bold">Background:</label>
        <input id="bgInput" type="file" accept="image/*">
      </div>
      <div>
        <label class="block font-bold">Main Image:</label>
        <input id="mainImageInput" type="file" accept="image/*">
      </div>
      <div>
        <label class="inline-flex items-center"><input id="toggleLogo" type="checkbox" checked> <span class="ml-2">Show Logo</span></label>
      </div>
      <div>
        <label class="inline-flex items-center"><input id="toggleBorder" type="checkbox" checked> <span class="ml-2">Show Border</span></label>
      </div>
      <div>
        <label class="block font-bold">Filename:</label>
        <input id="filenameInput" type="text" placeholder="social-card" class="w-full border rounded p-1">
      </div>
      <button id="downloadBtn" class="bg-blue-600 text-white px-4 py-2 rounded">Download PNG</button>
    </div>
    
    <!-- Card Preview -->
    <div class="w-full md:w-2/3 flex justify-center items-center">
      <div id="cardContainer" class="relative" style="width:1080px; height:1080px; background:#000; overflow:hidden;">
        <img id="bgImage" class="absolute top-0 left-0 w-full h-full object-cover">
        <img id="mainImage" class="absolute top-0 left-0 w-full h-3/5 object-cover hidden">
        <div id="headline" class="absolute w-full text-center font-[Jameel-Noori] text-[80px] top-[750px] text-[#fff403]"></div>
        <div id="subheading" class="absolute w-full text-center font-[Jameel-Noori] text-[50px] top-[900px] text-[#fff403]"></div>
        <img id="logoImage" src="sabah-logo.PNG" class="absolute top-5 right-5 w-[120px] h-[100px]">
        <div id="borderOverlay" class="absolute inset-0 border-8 border-white pointer-events-none"></div>
      </div>
    </div>
    
  </div>

<script>
  const headlineInput = document.getElementById("headlineInput");
  const subheadingInput = document.getElementById("subheadingInput");
  const headlineSize = document.getElementById("headlineSize");
  const subheadingSize = document.getElementById("subheadingSize");
  const headlineColor = document.getElementById("headlineColor");
  const subheadingColor = document.getElementById("subheadingColor");
  const bgInput = document.getElementById("bgInput");
  const mainImageInput = document.getElementById("mainImageInput");
  const toggleLogo = document.getElementById("toggleLogo");
  const toggleBorder = document.getElementById("toggleBorder");
  const filenameInput = document.getElementById("filenameInput");
  const downloadBtn = document.getElementById("downloadBtn");

  const headline = document.getElementById("headline");
  const subheading = document.getElementById("subheading");
  const bgImage = document.getElementById("bgImage");
  const mainImage = document.getElementById("mainImage");
  const logoImage = document.getElementById("logoImage");
  const borderOverlay = document.getElementById("borderOverlay");

  // Headline & Subheading
  headlineInput.addEventListener("input", () => { headline.textContent = headlineInput.value; });
  subheadingInput.addEventListener("input", () => { subheading.textContent = subheadingInput.value; });

  // Font sizes
  headlineSize.addEventListener("input", () => { headline.style.fontSize = headlineSize.value + "px"; });
  subheadingSize.addEventListener("input", () => { subheading.style.fontSize = subheadingSize.value + "px"; });

  // Colors
  headlineColor.addEventListener("input", () => { headline.style.color = headlineColor.value; });
  subheadingColor.addEventListener("input", () => { subheading.style.color = subheadingColor.value; });

  // Background
  bgInput.addEventListener("change", e => {
    const file = e.target.files[0];
    if (file) bgImage.src = URL.createObjectURL(file);
  });

  // Main Image
  mainImageInput.addEventListener("change", e => {
    const file = e.target.files[0];
    if (file) {
      mainImage.src = URL.createObjectURL(file);
      mainImage.classList.remove("hidden");
    }
  });

  // Logo toggle
  toggleLogo.addEventListener("change", () => {
    logoImage.style.display = toggleLogo.checked ? "block" : "none";
  });

  // Border toggle
  toggleBorder.addEventListener("change", () => {
    borderOverlay.style.display = toggleBorder.checked ? "block" : "none";
  });

  // Export
  function exportAsImage() {
    const filename = filenameInput.value.trim() || "social-card";
    html2canvas(document.getElementById("cardContainer"), {
      useCORS: true,
      scale: 1
    }).then(canvas => {
      const link = document.createElement("a");
      link.download = filename + ".png";
      link.href = canvas.toDataURL("image/png");
      link.click();
    }).catch(err => console.error("Export failed:", err));
  }
  downloadBtn.addEventListener("click", exportAsImage);
</script>
</body>
</html>
